// Code generated by mockery v2.40.0. DO NOT EDIT.

package mocks

import (
	models "UrlShorter/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// UrlCreator is an autogenerated mock type for the UrlCreator type
type UrlCreator struct {
	mock.Mock
}

// CreateUrl provides a mock function with given fields: _a0
func (_m *UrlCreator) CreateUrl(_a0 models.Url) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for CreateUrl")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Url) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetMaxUrl provides a mock function with given fields:
func (_m *UrlCreator) GetMaxUrl() (models.Url, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetMaxUrl")
	}

	var r0 models.Url
	var r1 error
	if rf, ok := ret.Get(0).(func() (models.Url, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() models.Url); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Url)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUrlCreator creates a new instance of UrlCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUrlCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *UrlCreator {
	mock := &UrlCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
